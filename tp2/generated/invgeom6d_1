# --- Add box to represent target
viz.addBox("world/box", [.05, .1, .2], [1., .2, .2, .5])
viz.addBox("world/blue", [.05, .1, .2], [.2, .2, 1., .5])

#
# OPTIM 6D #########################################################
#


def cost(q):
    '''Compute score from a configuration'''
    M = robot.placement(q, 6)
    return norm(pin.log(M.inverse() * Mtarget).vector)


def callback(q):
    viz.applyConfiguration('world/box', Mtarget)
    viz.applyConfiguration('world/blue', robot.placement(q, 6))
    viz.display(q)
    time.sleep(1e-1)


Mtarget = pin.SE3(pin.utils.rotate('x', 3.14 / 4), np.array([0.5, 0.1, 0.2]))  # x,y,z
qopt = fmin_bfgs(cost, robot.q0, callback=callback)

print('The robot finally reached effector placement at\n', robot.placement(qopt, 6))
